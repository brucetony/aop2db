[tox]
envlist =
    # Delete previous coverage reports
    coverage-clean

    # linters format and check that PEP8 style guidelines are followed
    linters

    # Make sure all the documentation files are in order
    docs

    # Runs the tests and reports how much of the base code is covered
    py
    coverage-report

[testenv]
commands = poetry run coverage run -p -m pytest
deps =
    poetry
    coverage
    pytest

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report

[testenv:linters:base]
skip_install = true
deps =
    flake8
    flake8-colors
    flake8-docstrings
    flake8-builtins
    flake8-use-fstring
    flake8-black
commands =
    flake8 {posargs:aop2db/ tests/ setup.py}

[testenv:linters]
deps =
    isort
    black
    {[testenv:linters:base]deps}
commands =
    isort aop2db/
    black aop2db/
    flake8 aop2db/

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
changedir = docs
whitelist_externals =
    /usr/bin/cat
    /usr/bin/cp
    /usr/bin/mkdir
deps =
    sphinx
    sphinx_rtd_theme
    sphinx-click
    sphinx_autodoc_typehints

commands =
    sphinx-build -b html -d {envtmpdir}/build/doctrees source {envtmpdir}/build/html


####################
# Deployment tools #
####################

[testenv:bumpversion]
commands = bump2version {posargs}
skip_install = true
deps =
    bump2version

[testenv:publish]
basepython = python3
skip_install = true
whitelist_externals =
    git
    poetry
deps =
    bumpversion
commands =
    bumpversion patch
    poetry publish --build
    git push